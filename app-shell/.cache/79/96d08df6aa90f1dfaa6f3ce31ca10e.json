{"id":"A1Vw","dependencies":[{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-base\\esm\\load.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-base\\src\\load.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\package.json","includedInParent":true,"mtime":1619359868439},{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-base\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./utils","loc":{"line":1,"column":23},"parent":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-base\\esm\\load.js","resolved":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-base\\esm\\utils.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.loadMetadata=r,exports.loadPilets=o;var e=require(\"./utils\");function t(t){return!!(0,e.isfunc)(t)||(console.error(\"Could not get the pilets. Provide a valid `fetchPilets` function.\"),!1)}function r(e){return t(e)?e():Promise.resolve([])}function o(e,t){return r(e).then(function(e){return Promise.all(e.map(t))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":0}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":13}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":20}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":35}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":43}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":56}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":57}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":64}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":68}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":76}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":89}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":91}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":99}},{"source":"../src/load.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":1,"column":110}},{"source":"../src/load.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":112}},{"source":"../src/load.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":116}},{"source":"../src/load.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":118}},{"source":"../src/load.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":126}},{"source":"../src/load.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":137}},{"source":"../src/load.ts","name":null,"original":{"line":4,"column":9},"generated":{"line":1,"column":146}},{"source":"../src/load.ts","name":null,"original":{"line":4,"column":26},"generated":{"line":1,"column":148}},{"source":"../src/load.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":1,"column":151}},{"source":"../src/load.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":1,"column":160}},{"source":"../src/load.ts","name":null,"original":{"line":5,"column":14},"generated":{"line":1,"column":162}},{"source":"../src/load.ts","name":null,"original":{"line":5,"column":14},"generated":{"line":1,"column":164}},{"source":"../src/load.ts","name":null,"original":{"line":5,"column":14},"generated":{"line":1,"column":172}},{"source":"../src/load.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":1,"column":177}},{"source":"../src/load.ts","name":null,"original":{"line":6,"column":12},"generated":{"line":1,"column":185}},{"source":"../src/load.ts","name":null,"original":{"line":6,"column":18},"generated":{"line":1,"column":191}},{"source":"../src/load.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":1,"column":261}},{"source":"../src/load.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":1,"column":264}},{"source":"../src/load.ts","name":null,"original":{"line":18,"column":16},"generated":{"line":1,"column":273}},{"source":"../src/load.ts","name":null,"original":{"line":18,"column":29},"generated":{"line":1,"column":275}},{"source":"../src/load.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":1,"column":278}},{"source":"../src/load.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":1,"column":285}},{"source":"../src/load.ts","name":null,"original":{"line":19,"column":23},"generated":{"line":1,"column":287}},{"source":"../src/load.ts","name":null,"original":{"line":20,"column":11},"generated":{"line":1,"column":290}},{"source":"../src/load.ts","name":null,"original":{"line":23,"column":9},"generated":{"line":1,"column":294}},{"source":"../src/load.ts","name":null,"original":{"line":23,"column":17},"generated":{"line":1,"column":302}},{"source":"../src/load.ts","name":null,"original":{"line":23,"column":25},"generated":{"line":1,"column":310}},{"source":"../src/load.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":314}},{"source":"../src/load.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":1,"column":323}},{"source":"../src/load.ts","name":null,"original":{"line":33,"column":27},"generated":{"line":1,"column":325}},{"source":"../src/load.ts","name":null,"original":{"line":33,"column":56},"generated":{"line":1,"column":327}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":1,"column":330}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":1,"column":337}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":22},"generated":{"line":1,"column":339}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":35},"generated":{"line":1,"column":342}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":40},"generated":{"line":1,"column":347}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":41},"generated":{"line":1,"column":356}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":52},"generated":{"line":1,"column":359}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":52},"generated":{"line":1,"column":366}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":60},"generated":{"line":1,"column":374}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":64},"generated":{"line":1,"column":378}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":71},"generated":{"line":1,"column":380}},{"source":"../src/load.ts","name":null,"original":{"line":34,"column":75},"generated":{"line":1,"column":384}}],"sources":{"../src/load.ts":"import { isfunc } from './utils';\nimport type { Pilet, PiletRequester, PiletLoader } from './types';\n\nfunction checkFetchPilets(fetchPilets: PiletRequester) {\n  if (!isfunc(fetchPilets)) {\n    console.error('Could not get the pilets. Provide a valid `fetchPilets` function.');\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Loads the pilets metadata and puts them in the cache, if provided.\n * @param fetchPilets The function to resolve the pilets.\n * @param cache The optional cache to use initially and update later.\n */\nexport function loadMetadata(fetchPilets: PiletRequester) {\n  if (checkFetchPilets(fetchPilets)) {\n    return fetchPilets();\n  }\n\n  return Promise.resolve([]);\n}\n\n/**\n * Loads the pilets by first getting them, then evaluating the raw content.\n * @param fetchPilets The function to resolve the pilets.\n * @param fetchDependency A function to fetch the dependencies. By default, `fetch` is used.\n * @param dependencies The availablly global dependencies, if any.\n * @returns A promise leading to the evaluated pilets.\n */\nexport function loadPilets(fetchPilets: PiletRequester, loadPilet: PiletLoader): Promise<Array<Pilet>> {\n  return loadMetadata(fetchPilets).then((pilets) => Promise.all(pilets.map(loadPilet)));\n}\n"},"lineCount":null}},"error":null,"hash":"3116db9d3a72b0e27a69bfaac0e6e98d","cacheData":{"env":{}}}