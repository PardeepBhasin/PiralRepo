{"id":"i925","dependencies":[{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-core\\esm\\hooks\\sharedData.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-core\\src\\hooks\\sharedData.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\package.json","includedInParent":true,"mtime":1619359868439},{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-core\\package.json","includedInParent":true,"mtime":1619100854609},{"name":"./globalState","loc":{"line":1,"column":31},"parent":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-core\\esm\\hooks\\sharedData.js","resolved":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-core\\esm\\hooks\\globalState.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.useSharedData=t;var e=require(\"./globalState\");function t(t){var r=t||function(e){return e};return(0,e.useGlobalState)(function(e){return r(e.data)})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":13}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":20}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":35}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":43}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":56}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":57}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":64}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":68}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":76}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":90}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":92}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":96}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":98}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":106}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":6},"generated":{"line":1,"column":123}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":1,"column":132}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":33},"generated":{"line":1,"column":134}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":8},"generated":{"line":1,"column":137}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":8},"generated":{"line":1,"column":141}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":17},"generated":{"line":1,"column":143}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":23},"generated":{"line":1,"column":146}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":24},"generated":{"line":1,"column":155}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":30},"generated":{"line":1,"column":158}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":30},"generated":{"line":1,"column":165}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":1,"column":168}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":1,"column":175}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":1,"column":177}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":1,"column":179}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":1,"column":195}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":1,"column":204}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":31},"generated":{"line":1,"column":207}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":31},"generated":{"line":1,"column":214}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":38},"generated":{"line":1,"column":216}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":40},"generated":{"line":1,"column":218}}],"sources":{"../../src/hooks/sharedData.ts":"import { useGlobalState } from './globalState';\nimport { SharedDataItem } from '../types';\n\n/**\n * Hook that yields the full shared data.\n * Any change to the shared data yields the new data.\n */\nexport function useSharedData(): Record<string, SharedDataItem>;\n\n/**\n * Hook that yields the selected subset of the shared data.\n * Only changes to this subset will yield a new data state.\n * @param select The subset selection.\n */\nexport function useSharedData<R>(select: (source: Record<string, SharedDataItem>) => R): R;\n\nexport function useSharedData<R>(s?: (source: Record<string, SharedDataItem>) => R) {\n  const select = s || ((m) => m);\n  return useGlobalState((s) => select(s.data));\n}\n"},"lineCount":null}},"error":null,"hash":"8f1d6fc9e587cdb9ebdfb2f252ecdadc","cacheData":{"env":{}}}