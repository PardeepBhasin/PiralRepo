{"id":"AXDp","dependencies":[{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-core\\esm\\actions\\state.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-core\\src\\actions\\state.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\package.json","includedInParent":true,"mtime":1619359868439},{"name":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-core\\package.json","includedInParent":true,"mtime":1619100854609},{"name":"@dbeining/react-atom","loc":{"line":1,"column":28},"parent":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\piral-core\\esm\\actions\\state.js","resolved":"C:\\D\\projects\\PiralPocUsingCli\\app-shell\\node_modules\\@dbeining\\react-atom\\dist\\react-atom.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.dispatch=t,exports.readState=r;var e=require(\"@dbeining/react-atom\");function t(t,r){(0,e.swap)(t.state,r)}function r(t,r){return r((0,e.deref)(t.state))}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":13}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":20}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":35}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":43}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":56}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":57}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":64}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":68}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":76}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":85}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":87}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":95}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":1,"column":105}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":111}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":113}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":121}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":1,"column":145}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":1,"column":154}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":4,"column":25},"generated":{"line":1,"column":156}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":4,"column":50},"generated":{"line":1,"column":158}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":1,"column":162}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":1,"column":164}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":1,"column":166}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":1,"column":172}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":5,"column":11},"generated":{"line":1,"column":174}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":5,"column":18},"generated":{"line":1,"column":180}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":1,"column":183}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":1,"column":192}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":8,"column":29},"generated":{"line":1,"column":194}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":8,"column":54},"generated":{"line":1,"column":196}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":1,"column":199}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":1,"column":206}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":1,"column":209}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":9,"column":22},"generated":{"line":1,"column":211}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":9,"column":22},"generated":{"line":1,"column":213}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":9,"column":22},"generated":{"line":1,"column":220}},{"source":"../../src/actions/state.ts","name":null,"original":{"line":9,"column":26},"generated":{"line":1,"column":222}}],"sources":{"../../src/actions/state.ts":"import { swap, deref } from '@dbeining/react-atom';\nimport { GlobalState, GlobalStateContext } from '../types';\n\nexport function dispatch(ctx: GlobalStateContext, update: (state: GlobalState) => GlobalState) {\n  swap(ctx.state, update);\n}\n\nexport function readState<S>(ctx: GlobalStateContext, read: (state: GlobalState) => S) {\n  const state = deref(ctx.state);\n  return read(state);\n}\n"},"lineCount":null}},"error":null,"hash":"142486bfd4b35c08375c754dd18b4038","cacheData":{"env":{}}}